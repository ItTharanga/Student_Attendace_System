/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package atendance;

import DB_Connection.DB_Connection;
import Login.CommonDetails;
import Registration.Semester_Year_Registration;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import main.MainApplication;

/**
 *
 * @author Dell
 */
public class Student_Attendane_Details extends javax.swing.JFrame {

    /**
     * Creates new form Student_Attendane_Details
     */
    public Student_Attendane_Details() {
        initComponents();
        CommonDetails.centerScreen(this);
        departmentDetails();
    }
    
      public void departmentDetails(){
        String sql="select department_name from department";
         DB_Connection con = new DB_Connection();
         ResultSet r= con.search(sql);
        try {
            while(r.next()){
                department_combox.addItem(r.getString("department_name"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(Semester_Year_Registration.class.getName()).log(Level.SEVERE, null, ex);
        }   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        prsentage_table = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        class_table = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        semester_combox = new javax.swing.JComboBox<>();
        semester_year_combox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jYearChooser1 = new com.toedter.calendar.JYearChooser();
        department_combox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Student Attendance Summary");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 30, 340, -1));

        prsentage_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student Name", "Student Code", "Hours of Semister", "Lecture Coved Hours", "Student Corved Hours", "Student Attend Prsentage", "Is Enagible For Exam"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(prsentage_table);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 390, 860, 220));

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 0, 0));
        jButton4.setText("Main Menu");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 610, 160, 30));

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton5.setText("Exit");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 610, -1, 30));

        class_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Subject Code", "Subject Name", "sem_year_subject_id"
            }
        ));
        jScrollPane3.setViewportView(class_table);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 160, 860, 190));

        jButton7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton7.setText("Load Semester Year Subject Details");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, 860, 30));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Check Student Attendance Percentage");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 350, 860, 40));

        semester_combox.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        semester_combox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Semester Level", "First Semester", "Second Semester" }));
        semester_combox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                semester_comboxActionPerformed(evt);
            }
        });
        getContentPane().add(semester_combox, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 90, 150, 40));

        semester_year_combox.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        semester_year_combox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Year Level", "First Year", "Second Year", "Third Year", "Fourth Year" }));
        semester_year_combox.setToolTipText("");
        semester_year_combox.setName("ss"); // NOI18N
        semester_year_combox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                semester_year_comboxActionPerformed(evt);
            }
        });
        getContentPane().add(semester_year_combox, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 90, 150, 40));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Academic Year");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, 130, 30));
        getContentPane().add(jYearChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 90, 150, 40));

        department_combox.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        department_combox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Department Name" }));
        department_combox.setToolTipText("");
        department_combox.setName("ss"); // NOI18N
        department_combox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                department_comboxActionPerformed(evt);
            }
        });
        getContentPane().add(department_combox, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 90, -1, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.dispose();
        new MainApplication().setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        try {

             if (jYearChooser1.getYear() == 0 || semester_year_combox.getSelectedIndex() == 0 || semester_combox.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog( null,"Please enter academic year and select semester year and semester level", "information box" + "Warning", JOptionPane.INFORMATION_MESSAGE);
            } else {
         
                DefaultTableModel model = (DefaultTableModel)class_table.getModel();
                model.setRowCount(0);
                DB_Connection con = new DB_Connection();
                String depName= department_combox.getSelectedItem().toString();

                String search = "select s.subject_code, s.subject_name, sys.sem_year_sub_id  from semester_year_subject sys inner join semester_year sy on sys.semester_year_id = sy.semester_year_id  "
                        + "inner join subject s on sys.subject_id = s.subject_id inner join department d on  s.department_id = d.department_id  "
                        + "where sy.academic_year ="+jYearChooser1.getYear()+" and sy.semester_level ='"+semester_combox.getSelectedItem().toString()+"' "
                        + "and sy.year_level ='"+semester_year_combox.getSelectedItem().toString()+"' and "
                        + "d.department_name ='"+department_combox.getSelectedItem().toString()+"'";
                ResultSet r = con.search(search);
                
                while (r.next()) {
                    model.addRow(new Object[]{r.getString("subject_code"), r.getString("subject_name"), r.getInt("sem_year_sub_id")});
            }

        }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            
            DB_Connection con = new DB_Connection();
            String semYearSubId = class_table.getValueAt(class_table.getSelectedRow(), 2).toString();
            DefaultTableModel model = (DefaultTableModel)prsentage_table.getModel();
            model.setRowCount(0);
            int credit =0;
            double subjectFullHours = 0;
            double studentHours = 0;
            double classFullHours = 0;
            double classHeldHours = 0;
            
            
            String semYearSubSearch = "select * from semester_year_subject where sem_year_sub_id ="+semYearSubId+"";
            ResultSet semYearSubResult = con.search(semYearSubSearch);
            if (semYearSubResult.next()) {
                credit = semYearSubResult.getInt("credit");
                subjectFullHours = semYearSubResult.getInt("hours");
            }
            
 
           
     
               
                String studentSearch = "select * from sem_year_sub_students where sem_year_sub_id ="+semYearSubId+"";
                ResultSet studentResult = con.search(studentSearch);
                
                while (studentResult.next()) {  
                    String studentName = null;
                    String studentCode = null;
                    studentHours = 0;
                    classHeldHours = 0;
                    classFullHours = 0;
                    double studentAttendPresentage = 0;
                    int studentId = studentResult.getInt("student_id");
                    boolean isEnaible = false;
                    int classId = 0;
                    String classSearch = "select * from class where sem_year_sub_id = "+semYearSubId+"";
                     ResultSet classDetails = con.search(classSearch);
                     while (classDetails.next()) { 
                      classHeldHours = classDetails.getInt("hours");
                      classFullHours = classFullHours + classHeldHours;
                      classId = classDetails.getInt("class_id");
                      
                     String studentAttendSearch = "select * from attendance where class_id ="+classId+" and student_id ="+studentId+"";
                     ResultSet studentAttendanceResult = con.search(studentAttendSearch);
                    
                     if (studentAttendanceResult.next()) {
                        boolean isPresent = studentAttendanceResult.getBoolean("is_present");
                        
                        if (isPresent) {
                            studentHours= studentHours+classHeldHours;
                        }
                        
                    }
                     }
                    
                    
                   String studentDetailSearch = "select * from student where student_id = "+studentId+""; 
                   ResultSet stuSearch = con.search(studentDetailSearch);
                   
                   if (stuSearch.next()) {
                       studentName = stuSearch.getString("first_name") + " " + stuSearch.getString("last_name");
                       studentCode = stuSearch.getString("reg_num");
                       
                       studentAttendPresentage = (studentHours / classFullHours) * 100;
                       isEnaible = studentAttendPresentage>= 80? true : false;
                                
                   }
                   
                   double classHours = classFullHours/60.00;
                   double stuHours = studentHours/60.00;
                 
                   
                    DecimalFormat df = new DecimalFormat("0.00");
                   model.addRow(new Object[]{studentName, studentCode, df.format(subjectFullHours), df.format(classHours), 
                       df.format(stuHours), df.format(studentAttendPresentage)+ " %", isEnaible});
                }
           // }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void semester_comboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_semester_comboxActionPerformed

    }//GEN-LAST:event_semester_comboxActionPerformed

    private void semester_year_comboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_semester_year_comboxActionPerformed

    }//GEN-LAST:event_semester_year_comboxActionPerformed

    private void department_comboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_department_comboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_department_comboxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Student_Attendane_Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Student_Attendane_Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Student_Attendane_Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Student_Attendane_Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Student_Attendane_Details().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable class_table;
    private javax.swing.JComboBox<String> department_combox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private com.toedter.calendar.JYearChooser jYearChooser1;
    private javax.swing.JTable prsentage_table;
    private javax.swing.JComboBox<String> semester_combox;
    private javax.swing.JComboBox<String> semester_year_combox;
    // End of variables declaration//GEN-END:variables
}
